{"ast":null,"code":"import _slicedToArray from \"/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectWithoutProperties from \"/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toPropertyKey from \"/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\";\nimport _defineProperty from \"/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _excluded = [\"components\", \"selectRef\", \"isLoading\", \"cacheUniqs\"];\n// src/index.ts\nimport Select from \"react-select\";\n\n// src/useAsyncPaginate.ts\nimport { useState as useState2, useCallback as useCallback2 } from \"react\";\n\n// src/useAsyncPaginateBase.ts\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport useIsMountedRef from \"use-is-mounted-ref\";\nimport { useLazyRef } from \"@vtaits/use-lazy-ref\";\n\n// src/getInitialCache.ts\nvar getInitialCache = function getInitialCache(params) {\n  return {\n    isFirstLoad: true,\n    options: [],\n    hasMore: true,\n    isLoading: false,\n    additional: params.additional\n  };\n};\n\n// src/getInitialOptionsCache.ts\nvar getInitialOptionsCache = function getInitialOptionsCache(_ref) {\n  var options = _ref.options,\n    defaultOptions = _ref.defaultOptions,\n    additional = _ref.additional,\n    defaultAdditional = _ref.defaultAdditional;\n  var initialOptions = defaultOptions === true ? null : defaultOptions instanceof Array ? defaultOptions : options;\n  if (initialOptions) {\n    return {\n      \"\": {\n        isFirstLoad: false,\n        isLoading: false,\n        options: initialOptions,\n        hasMore: true,\n        additional: defaultAdditional || additional\n      }\n    };\n  }\n  return {};\n};\n\n// src/defaultShouldLoadMore.ts\nvar AVAILABLE_DELTA = 10;\nvar defaultShouldLoadMore = function defaultShouldLoadMore(scrollHeight, clientHeight, scrollTop) {\n  var bottomBorder = scrollHeight - clientHeight - AVAILABLE_DELTA;\n  return bottomBorder < scrollTop;\n};\n\n// src/defaultReduceOptions.ts\nvar defaultReduceOptions = function defaultReduceOptions(prevOptions, loadedOptions) {\n  return [].concat(_toConsumableArray(prevOptions), _toConsumableArray(loadedOptions));\n};\n\n// src/requestOptions.ts\nimport sleep from \"sleep-promise\";\n\n// src/validateResponse.ts\nvar errorText = '[react-select-async-paginate] response of \"loadOptions\" should be an object with \"options\" prop, which contains array of options.';\nvar checkIsResponse = function checkIsResponse(response) {\n  if (!response) {\n    return false;\n  }\n  var options = response.options,\n    hasMore = response.hasMore;\n  if (!Array.isArray(options)) {\n    return false;\n  }\n  if (typeof hasMore !== \"boolean\" && typeof hasMore !== \"undefined\") {\n    return false;\n  }\n  return true;\n};\nvar validateResponse = function validateResponse(response) {\n  if (!checkIsResponse(response)) {\n    console.error(errorText, \"Received:\", response);\n    throw new Error(errorText);\n  }\n  return true;\n};\n\n// src/requestOptions.ts\nvar requestOptions = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(caller, paramsRef, optionsCacheRef, debounceTimeout, setOptionsCache, reduceOptions) {\n    var currentInputValue, isCacheEmpty, currentOptions, newInputValue, response, hasError, loadOptions, _response, options, hasMore, newAdditional;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          currentInputValue = paramsRef.current.inputValue;\n          isCacheEmpty = !optionsCacheRef.current[currentInputValue];\n          currentOptions = isCacheEmpty ? getInitialCache(paramsRef.current) : optionsCacheRef.current[currentInputValue];\n          if (!(currentOptions.isLoading || !currentOptions.hasMore)) {\n            _context.next = 5;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 5:\n          setOptionsCache(function (prevOptionsCache) {\n            return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n              isLoading: true\n            })));\n          });\n          if (!(debounceTimeout > 0 && caller === \"input-change\")) {\n            _context.next = 13;\n            break;\n          }\n          _context.next = 9;\n          return sleep(debounceTimeout);\n        case 9:\n          newInputValue = paramsRef.current.inputValue;\n          if (!(currentInputValue !== newInputValue)) {\n            _context.next = 13;\n            break;\n          }\n          setOptionsCache(function (prevOptionsCache) {\n            if (isCacheEmpty) {\n              var itemForDelete = prevOptionsCache[currentInputValue],\n                restCache = _objectWithoutProperties(prevOptionsCache, [currentInputValue].map(_toPropertyKey));\n              return restCache;\n            }\n            return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n              isLoading: false\n            })));\n          });\n          return _context.abrupt(\"return\");\n        case 13:\n          hasError = false;\n          _context.prev = 14;\n          loadOptions = paramsRef.current.loadOptions;\n          _context.next = 18;\n          return loadOptions(currentInputValue, currentOptions.options, currentOptions.additional);\n        case 18:\n          response = _context.sent;\n          _context.next = 24;\n          break;\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](14);\n          hasError = true;\n        case 24:\n          if (!hasError) {\n            _context.next = 27;\n            break;\n          }\n          setOptionsCache(function (prevOptionsCache) {\n            return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n              isLoading: false\n            })));\n          });\n          return _context.abrupt(\"return\");\n        case 27:\n          if (validateResponse(response)) {\n            _response = response, options = _response.options, hasMore = _response.hasMore;\n            newAdditional = response.hasOwnProperty(\"additional\") ? response.additional : currentOptions.additional;\n            setOptionsCache(function (prevOptionsCache) {\n              return _objectSpread(_objectSpread({}, prevOptionsCache), {}, _defineProperty({}, currentInputValue, _objectSpread(_objectSpread({}, currentOptions), {}, {\n                options: reduceOptions(currentOptions.options, options, newAdditional),\n                hasMore: !!hasMore,\n                isLoading: false,\n                isFirstLoad: false,\n                additional: newAdditional\n              })));\n            });\n          }\n        case 28:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[14, 21]]);\n  }));\n  return function requestOptions(_x, _x2, _x3, _x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n// src/useAsyncPaginateBase.ts\nvar increaseStateId = function increaseStateId(prevStateId) {\n  return prevStateId + 1;\n};\nvar useAsyncPaginateBase = function useAsyncPaginateBase(params) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var defaultOptions = params.defaultOptions,\n    _params$loadOptionsOn = params.loadOptionsOnMenuOpen,\n    loadOptionsOnMenuOpen = _params$loadOptionsOn === void 0 ? true : _params$loadOptionsOn,\n    _params$debounceTimeo = params.debounceTimeout,\n    debounceTimeout = _params$debounceTimeo === void 0 ? 0 : _params$debounceTimeo,\n    inputValue = params.inputValue,\n    menuIsOpen = params.menuIsOpen,\n    _params$filterOption = params.filterOption,\n    filterOption = _params$filterOption === void 0 ? null : _params$filterOption,\n    _params$reduceOptions = params.reduceOptions,\n    reduceOptions = _params$reduceOptions === void 0 ? defaultReduceOptions : _params$reduceOptions,\n    _params$shouldLoadMor = params.shouldLoadMore,\n    shouldLoadMore = _params$shouldLoadMor === void 0 ? defaultShouldLoadMore : _params$shouldLoadMor;\n  var isMountedRef = useIsMountedRef();\n  var isInitRef = useRef(true);\n  var paramsRef = useRef(params);\n  paramsRef.current = params;\n  var setStateId = useState(0)[1];\n  var optionsCacheRef = useLazyRef(function () {\n    return getInitialOptionsCache(params);\n  });\n  var callRequestOptions = useCallback(function (caller) {\n    requestOptions(caller, paramsRef, optionsCacheRef, debounceTimeout, function (reduceState) {\n      optionsCacheRef.current = reduceState(optionsCacheRef.current);\n      if (isMountedRef.current) {\n        setStateId(increaseStateId);\n      }\n    }, reduceOptions);\n  }, [debounceTimeout]);\n  var handleScrolledToBottom = useCallback(function () {\n    var currentInputValue = paramsRef.current.inputValue;\n    var currentOptions2 = optionsCacheRef.current[currentInputValue];\n    if (currentOptions2) {\n      callRequestOptions(\"menu-scroll\");\n    }\n  }, [callRequestOptions]);\n  useEffect(function () {\n    if (isInitRef.current) {\n      isInitRef.current = false;\n    } else {\n      optionsCacheRef.current = {};\n      setStateId(increaseStateId);\n    }\n    if (defaultOptions === true) {\n      callRequestOptions(\"autoload\");\n    }\n  }, deps);\n  useEffect(function () {\n    if (menuIsOpen && !optionsCacheRef.current[inputValue]) {\n      callRequestOptions(\"input-change\");\n    }\n  }, [inputValue]);\n  useEffect(function () {\n    if (menuIsOpen && !optionsCacheRef.current[\"\"] && loadOptionsOnMenuOpen) {\n      callRequestOptions(\"menu-toggle\");\n    }\n  }, [menuIsOpen]);\n  var currentOptions = optionsCacheRef.current[inputValue] || getInitialCache(params);\n  return {\n    handleScrolledToBottom: handleScrolledToBottom,\n    shouldLoadMore: shouldLoadMore,\n    filterOption: filterOption,\n    isLoading: currentOptions.isLoading,\n    isFirstLoad: currentOptions.isFirstLoad,\n    options: currentOptions.options\n  };\n};\n\n// src/useAsyncPaginate.ts\nvar useAsyncPaginate = function useAsyncPaginate(params) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var inputValueParam = params.inputValue,\n    menuIsOpenParam = params.menuIsOpen,\n    defaultInputValueParam = params.defaultInputValue,\n    defaultMenuIsOpenParam = params.defaultMenuIsOpen,\n    onInputChangeParam = params.onInputChange,\n    onMenuCloseParam = params.onMenuClose,\n    onMenuOpenParam = params.onMenuOpen;\n  var _useState = useState2(defaultInputValueParam || \"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputValueState = _useState2[0],\n    setInputValue = _useState2[1];\n  var _useState3 = useState2(!!defaultMenuIsOpenParam),\n    _useState4 = _slicedToArray(_useState3, 2),\n    menuIsOpenState = _useState4[0],\n    setMenuIsOpen = _useState4[1];\n  var inputValue = typeof inputValueParam === \"string\" ? inputValueParam : inputValueState;\n  var menuIsOpen = typeof menuIsOpenParam === \"boolean\" ? menuIsOpenParam : menuIsOpenState;\n  var onInputChange = useCallback2(function (nextInputValue, actionMeta) {\n    if (onInputChangeParam) {\n      onInputChangeParam(nextInputValue, actionMeta);\n    }\n    setInputValue(nextInputValue);\n  }, [onInputChangeParam]);\n  var onMenuClose = useCallback2(function () {\n    if (onMenuCloseParam) {\n      onMenuCloseParam();\n    }\n    setMenuIsOpen(false);\n  }, [onMenuCloseParam]);\n  var onMenuOpen = useCallback2(function () {\n    if (onMenuOpenParam) {\n      onMenuOpenParam();\n    }\n    setMenuIsOpen(true);\n  }, [onMenuOpenParam]);\n  var baseResult = useAsyncPaginateBase(_objectSpread(_objectSpread({}, params), {}, {\n    inputValue: inputValue,\n    menuIsOpen: menuIsOpen\n  }), deps);\n  return _objectSpread(_objectSpread({}, baseResult), {}, {\n    inputValue: inputValue,\n    menuIsOpen: menuIsOpen,\n    onInputChange: onInputChange,\n    onMenuClose: onMenuClose,\n    onMenuOpen: onMenuOpen\n  });\n};\n\n// src/useComponents.ts\nimport { useMemo } from \"react\";\nimport { components as defaultComponents } from \"react-select\";\n\n// src/wrapMenuList.tsx\nimport { useEffect as useEffect2, useRef as useRef2, useCallback as useCallback3 } from \"react\";\nimport composeRefs from \"@seznam/compose-react-refs\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CHECK_TIMEOUT = 300;\nfunction wrapMenuList(MenuList2) {\n  function WrappedMenuList(props) {\n    var selectProps = props.selectProps,\n      innerRef = props.innerRef;\n    var handleScrolledToBottom = selectProps.handleScrolledToBottom,\n      shouldLoadMore = selectProps.shouldLoadMore;\n    var checkTimeoutRef = useRef2();\n    var menuListRef = useRef2(null);\n    var shouldHandle = useCallback3(function () {\n      var el = menuListRef.current;\n      if (!el) {\n        return false;\n      }\n      var scrollTop = el.scrollTop,\n        scrollHeight = el.scrollHeight,\n        clientHeight = el.clientHeight;\n      return shouldLoadMore(scrollHeight, clientHeight, scrollTop);\n    }, [shouldLoadMore]);\n    var checkAndHandle = useCallback3(function () {\n      if (shouldHandle()) {\n        if (handleScrolledToBottom) {\n          handleScrolledToBottom();\n        }\n      }\n    }, [shouldHandle, handleScrolledToBottom]);\n    var setCheckAndHandleTimeout = useCallback3(function () {\n      checkAndHandle();\n      checkTimeoutRef.current = setTimeout(setCheckAndHandleTimeout, CHECK_TIMEOUT);\n    }, [checkAndHandle]);\n    useEffect2(function () {\n      setCheckAndHandleTimeout();\n      return function () {\n        if (checkTimeoutRef.current) {\n          clearTimeout(checkTimeoutRef.current);\n        }\n      };\n    }, []);\n    return /* @__PURE__ */jsx(MenuList2, _objectSpread(_objectSpread({}, props), {}, {\n      innerRef: composeRefs(innerRef, menuListRef)\n    }));\n  }\n  return WrappedMenuList;\n}\n\n// src/useComponents.ts\nvar MenuList = wrapMenuList(defaultComponents.MenuList);\nvar useComponents = function useComponents(components) {\n  return useMemo(function () {\n    return _objectSpread({\n      MenuList: MenuList\n    }, components);\n  }, [components]);\n};\n\n// src/withAsyncPaginate.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nvar defaultCacheUniqs = [];\nvar defaultComponents2 = {};\nfunction withAsyncPaginate(SelectComponent) {\n  function WithAsyncPaginate(props) {\n    var _props$components = props.components,\n      components = _props$components === void 0 ? defaultComponents2 : _props$components,\n      _props$selectRef = props.selectRef,\n      selectRef = _props$selectRef === void 0 ? void 0 : _props$selectRef,\n      isLoadingProp = props.isLoading,\n      _props$cacheUniqs = props.cacheUniqs,\n      cacheUniqs = _props$cacheUniqs === void 0 ? defaultCacheUniqs : _props$cacheUniqs,\n      rest = _objectWithoutProperties(props, _excluded);\n    var asyncPaginateProps = useAsyncPaginate(rest, cacheUniqs);\n    var processedComponents = useComponents(components);\n    var isLoading = typeof isLoadingProp === \"boolean\" ? isLoadingProp : asyncPaginateProps.isLoading;\n    return /* @__PURE__ */jsx2(SelectComponent, _objectSpread(_objectSpread(_objectSpread({}, props), asyncPaginateProps), {}, {\n      isLoading: isLoading,\n      components: processedComponents,\n      ref: selectRef\n    }));\n  }\n  return WithAsyncPaginate;\n}\n\n// src/reduceGroupedOptions.ts\nvar checkGroup = function checkGroup(group) {\n  if (!group) {\n    return false;\n  }\n  var label = group.label,\n    options = group.options;\n  if (typeof label !== \"string\" && typeof label !== \"undefined\") {\n    return false;\n  }\n  if (!Array.isArray(options)) {\n    return false;\n  }\n  return true;\n};\nvar reduceGroupedOptions = function reduceGroupedOptions(prevOptions, loadedOptions) {\n  var res = prevOptions.slice();\n  var mapLabelToIndex = {};\n  var prevOptionsIndex = 0;\n  var prevOptionsLength = prevOptions.length;\n  loadedOptions.forEach(function (optionOrGroup) {\n    var group = checkGroup(optionOrGroup) ? optionOrGroup : {\n      options: [optionOrGroup]\n    };\n    var _group$label = group.label,\n      label = _group$label === void 0 ? \"\" : _group$label;\n    var groupIndex = mapLabelToIndex[label];\n    if (typeof groupIndex !== \"number\") {\n      for (; prevOptionsIndex < prevOptionsLength && typeof mapLabelToIndex[label] !== \"number\"; ++prevOptionsIndex) {\n        var prevGroup = prevOptions[prevOptionsIndex];\n        if (checkGroup(prevGroup)) {\n          mapLabelToIndex[prevGroup.label || \"\"] = prevOptionsIndex;\n        }\n      }\n      groupIndex = mapLabelToIndex[label];\n    }\n    if (typeof groupIndex !== \"number\") {\n      mapLabelToIndex[label] = res.length;\n      res.push(group);\n      return;\n    }\n    res[groupIndex] = _objectSpread(_objectSpread({}, res[groupIndex]), {}, {\n      options: [].concat(_toConsumableArray(res[groupIndex].options), _toConsumableArray(group.options))\n    });\n  });\n  return res;\n};\n\n// src/index.ts\nvar AsyncPaginate = withAsyncPaginate(Select);\nexport { AsyncPaginate, checkIsResponse, reduceGroupedOptions, useAsyncPaginate, useAsyncPaginateBase, useComponents, validateResponse, withAsyncPaginate, wrapMenuList };","map":{"version":3,"names":["Select","useState","useState2","useCallback","useCallback2","useEffect","useRef","useIsMountedRef","useLazyRef","getInitialCache","params","isFirstLoad","options","hasMore","isLoading","additional","getInitialOptionsCache","_ref","defaultOptions","defaultAdditional","initialOptions","Array","AVAILABLE_DELTA","defaultShouldLoadMore","scrollHeight","clientHeight","scrollTop","bottomBorder","defaultReduceOptions","prevOptions","loadedOptions","concat","_toConsumableArray","sleep","errorText","checkIsResponse","response","isArray","validateResponse","console","error","Error","requestOptions","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","caller","paramsRef","optionsCacheRef","debounceTimeout","setOptionsCache","reduceOptions","currentInputValue","isCacheEmpty","currentOptions","newInputValue","hasError","loadOptions","_response","newAdditional","wrap","_callee$","_context","prev","next","current","inputValue","abrupt","prevOptionsCache","_objectSpread","_defineProperty","itemForDelete","restCache","_objectWithoutProperties","map","_toPropertyKey","sent","t0","hasOwnProperty","stop","_x","_x2","_x3","_x4","_x5","_x6","apply","arguments","increaseStateId","prevStateId","useAsyncPaginateBase","deps","length","undefined","_params$loadOptionsOn","loadOptionsOnMenuOpen","_params$debounceTimeo","menuIsOpen","_params$filterOption","filterOption","_params$reduceOptions","_params$shouldLoadMor","shouldLoadMore","isMountedRef","isInitRef","setStateId","callRequestOptions","reduceState","handleScrolledToBottom","currentOptions2","useAsyncPaginate","inputValueParam","menuIsOpenParam","defaultInputValueParam","defaultInputValue","defaultMenuIsOpenParam","defaultMenuIsOpen","onInputChangeParam","onInputChange","onMenuCloseParam","onMenuClose","onMenuOpenParam","onMenuOpen","_useState","_useState2","_slicedToArray","inputValueState","setInputValue","_useState3","_useState4","menuIsOpenState","setMenuIsOpen","nextInputValue","actionMeta","baseResult","useMemo","components","defaultComponents","useEffect2","useRef2","useCallback3","composeRefs","jsx","CHECK_TIMEOUT","wrapMenuList","MenuList2","WrappedMenuList","props","selectProps","innerRef","checkTimeoutRef","menuListRef","shouldHandle","el","checkAndHandle","setCheckAndHandleTimeout","setTimeout","clearTimeout","MenuList","useComponents","jsx2","defaultCacheUniqs","defaultComponents2","withAsyncPaginate","SelectComponent","WithAsyncPaginate","_props$components","_props$selectRef","selectRef","isLoadingProp","_props$cacheUniqs","cacheUniqs","rest","_excluded","asyncPaginateProps","processedComponents","ref","checkGroup","group","label","reduceGroupedOptions","res","slice","mapLabelToIndex","prevOptionsIndex","prevOptionsLength","forEach","optionOrGroup","_group$label","groupIndex","prevGroup","push","AsyncPaginate"],"sources":["/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/index.ts","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/useAsyncPaginate.ts","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/useAsyncPaginateBase.ts","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/getInitialCache.ts","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/getInitialOptionsCache.ts","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/defaultShouldLoadMore.ts","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/defaultReduceOptions.ts","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/requestOptions.ts","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/validateResponse.ts","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/useComponents.ts","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/wrapMenuList.tsx","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/withAsyncPaginate.tsx","/home/syampushpan/Downloads/WeatherForecast-main/Client/node_modules/react-select-async-paginate/src/reduceGroupedOptions.ts"],"sourcesContent":["import Select from 'react-select';\n\nimport { withAsyncPaginate } from './withAsyncPaginate';\n\nexport { wrapMenuList } from './wrapMenuList';\nexport { reduceGroupedOptions } from './reduceGroupedOptions';\n\nexport { withAsyncPaginate };\n\nexport {\n  checkIsResponse,\n  validateResponse,\n} from './validateResponse';\nexport { useAsyncPaginateBase } from './useAsyncPaginateBase';\nexport { useAsyncPaginate } from './useAsyncPaginate';\nexport { useComponents } from './useComponents';\n\nexport const AsyncPaginate = withAsyncPaginate(Select);\n\nexport * from './types';\n","import {\n  useState,\n  useCallback,\n} from 'react';\nimport type {\n  GroupBase,\n  InputActionMeta,\n} from 'react-select';\n\nimport {\n  useAsyncPaginateBase,\n} from './useAsyncPaginateBase';\n\nimport type {\n  UseAsyncPaginateParams,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateResult,\n} from './types';\n\nexport const useAsyncPaginate = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  params: UseAsyncPaginateParams<OptionType, Group, Additional>,\n  deps: ReadonlyArray<unknown> = [],\n): UseAsyncPaginateResult<OptionType, Group> => {\n  const {\n    inputValue: inputValueParam,\n    menuIsOpen: menuIsOpenParam,\n    defaultInputValue: defaultInputValueParam,\n    defaultMenuIsOpen: defaultMenuIsOpenParam,\n    onInputChange: onInputChangeParam,\n    onMenuClose: onMenuCloseParam,\n    onMenuOpen: onMenuOpenParam,\n  } = params;\n\n  const [inputValueState, setInputValue] = useState(\n    defaultInputValueParam || '',\n  );\n  const [menuIsOpenState, setMenuIsOpen] = useState(\n    !!defaultMenuIsOpenParam,\n  );\n\n  const inputValue: string = typeof inputValueParam === 'string'\n    ? inputValueParam\n    : inputValueState;\n\n  const menuIsOpen: boolean = typeof menuIsOpenParam === 'boolean'\n    ? menuIsOpenParam\n    : menuIsOpenState;\n\n  const onInputChange = useCallback((\n    nextInputValue: string,\n    actionMeta: InputActionMeta,\n  ): void => {\n    if (onInputChangeParam) {\n      onInputChangeParam(nextInputValue, actionMeta);\n    }\n\n    setInputValue(nextInputValue);\n  }, [onInputChangeParam]);\n\n  const onMenuClose = useCallback((): void => {\n    if (onMenuCloseParam) {\n      onMenuCloseParam();\n    }\n\n    setMenuIsOpen(false);\n  }, [onMenuCloseParam]);\n\n  const onMenuOpen = useCallback((): void => {\n    if (onMenuOpenParam) {\n      onMenuOpenParam();\n    }\n\n    setMenuIsOpen(true);\n  }, [onMenuOpenParam]);\n\n  const baseResult: UseAsyncPaginateBaseResult<OptionType, Group> = useAsyncPaginateBase(\n    {\n      ...params,\n      inputValue,\n      menuIsOpen,\n    },\n    deps,\n  );\n\n  return {\n    ...baseResult,\n    inputValue,\n    menuIsOpen,\n    onInputChange,\n    onMenuClose,\n    onMenuOpen,\n  };\n};\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\n\nimport type {\n  GroupBase,\n} from 'react-select';\n\nimport useIsMountedRef from 'use-is-mounted-ref';\n\nimport { useLazyRef } from '@vtaits/use-lazy-ref';\n\nimport { getInitialCache } from './getInitialCache';\nimport { getInitialOptionsCache } from './getInitialOptionsCache';\nimport { defaultShouldLoadMore } from './defaultShouldLoadMore';\nimport { defaultReduceOptions } from './defaultReduceOptions';\nimport { requestOptions } from './requestOptions';\n\nimport type {\n  OptionsCacheItem,\n  UseAsyncPaginateBaseResult,\n  UseAsyncPaginateBaseParams,\n  RequestOptionsCallerType,\n} from './types';\n\nexport const increaseStateId = (prevStateId: number): number => prevStateId + 1;\n\nexport const useAsyncPaginateBase = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nAdditional,\n  >(\n    params: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n    deps: ReadonlyArray<any> = [],\n  ): UseAsyncPaginateBaseResult<OptionType, Group> => {\n  const {\n    defaultOptions,\n    loadOptionsOnMenuOpen = true,\n    debounceTimeout = 0,\n    inputValue,\n    menuIsOpen,\n    filterOption = null,\n    reduceOptions = defaultReduceOptions,\n    shouldLoadMore = defaultShouldLoadMore,\n  } = params;\n\n  const isMountedRef = useIsMountedRef();\n\n  const isInitRef = useRef<boolean>(true);\n  const paramsRef = useRef<UseAsyncPaginateBaseParams<OptionType, Group, Additional>>(params);\n\n  paramsRef.current = params;\n\n  const setStateId = useState(0)[1];\n\n  const optionsCacheRef = useLazyRef(() => getInitialOptionsCache(params));\n\n  const callRequestOptions = useCallback((caller: RequestOptionsCallerType): void => {\n    requestOptions(\n      caller,\n      paramsRef,\n      optionsCacheRef,\n      debounceTimeout,\n      (reduceState) => {\n        optionsCacheRef.current = reduceState(optionsCacheRef.current);\n\n        if (isMountedRef.current) {\n          setStateId(increaseStateId);\n        }\n      },\n      reduceOptions,\n    );\n  }, [debounceTimeout]);\n\n  const handleScrolledToBottom = useCallback((): void => {\n    const currentInputValue = paramsRef.current.inputValue;\n    const currentOptions = optionsCacheRef.current[currentInputValue];\n\n    if (currentOptions) {\n      callRequestOptions('menu-scroll');\n    }\n  }, [callRequestOptions]);\n\n  useEffect(() => {\n    if (isInitRef.current) {\n      isInitRef.current = false;\n    } else {\n      optionsCacheRef.current = {};\n      setStateId(increaseStateId);\n    }\n\n    if (defaultOptions === true) {\n      callRequestOptions('autoload');\n    }\n  }, deps);\n\n  useEffect(() => {\n    if (menuIsOpen && !optionsCacheRef.current[inputValue]) {\n      callRequestOptions('input-change');\n    }\n  }, [inputValue]);\n\n  useEffect(() => {\n    if (\n      menuIsOpen\n      && !optionsCacheRef.current['']\n      && loadOptionsOnMenuOpen\n    ) {\n      callRequestOptions('menu-toggle');\n    }\n  }, [menuIsOpen]);\n\n  const currentOptions: OptionsCacheItem<\n  OptionType,\n  Group,\n  Additional\n  > = optionsCacheRef.current[inputValue]\n    || getInitialCache(params);\n\n  return {\n    handleScrolledToBottom,\n    shouldLoadMore,\n    filterOption,\n    isLoading: currentOptions.isLoading,\n    isFirstLoad: currentOptions.isFirstLoad,\n    options: currentOptions.options,\n  };\n};\n","import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  OptionsCacheItem,\n  UseAsyncPaginateBaseParams,\n} from './types';\n\nexport const getInitialCache = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  params: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n): OptionsCacheItem<OptionType, Group, Additional> => ({\n    isFirstLoad: true,\n    options: [],\n    hasMore: true,\n    isLoading: false,\n    additional: params.additional,\n  });\n","import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  OptionsCache,\n  UseAsyncPaginateBaseParams,\n} from './types';\n\nexport const getInitialOptionsCache = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nAdditional>(\n    {\n      options,\n      defaultOptions,\n      additional,\n      defaultAdditional,\n    }: UseAsyncPaginateBaseParams<OptionType, Group, Additional>,\n  ): OptionsCache<OptionType, Group, Additional> => {\n  const initialOptions = defaultOptions === true\n    ? null\n    : (defaultOptions instanceof Array)\n      ? defaultOptions\n      : options;\n\n  if (initialOptions) {\n    return {\n      '': {\n        isFirstLoad: false,\n        isLoading: false,\n        options: initialOptions,\n        hasMore: true,\n        additional: defaultAdditional || additional,\n      },\n    };\n  }\n\n  return {};\n};\n","import type {\n  ShouldLoadMore,\n} from './types';\n\nconst AVAILABLE_DELTA = 10;\n\nexport const defaultShouldLoadMore: ShouldLoadMore = (scrollHeight, clientHeight, scrollTop) => {\n  const bottomBorder = scrollHeight - clientHeight - AVAILABLE_DELTA;\n\n  return bottomBorder < scrollTop;\n};\n","import type {\n  GroupBase,\n  OptionsOrGroups,\n} from 'react-select';\n\nexport const defaultReduceOptions = <OptionType, Group extends GroupBase<OptionType>>(\n  prevOptions: OptionsOrGroups<OptionType, Group>,\n  loadedOptions: OptionsOrGroups<OptionType, Group>,\n) => [...prevOptions, ...loadedOptions];\n","import type {\n  MutableRefObject,\n} from 'react';\n\nimport type {\n  GroupBase,\n} from 'react-select';\nimport sleep from 'sleep-promise';\n\nimport { getInitialCache } from './getInitialCache';\nimport { validateResponse } from './validateResponse';\n\nimport type {\n  OptionsCache,\n  OptionsCacheItem,\n  UseAsyncPaginateBaseParams,\n  ReduceOptions,\n  RequestOptionsCallerType,\n} from './types';\n\ntype MapOptionsCache<OptionType, Group extends GroupBase<OptionType>, Additional> = (\n  prevCache: OptionsCache<OptionType, Group, Additional>,\n) => OptionsCache<OptionType, Group, Additional>;\n\ntype SetOptionsCache<OptionType, Group extends GroupBase<OptionType>, Additional> = (\n  stateMapper: MapOptionsCache<OptionType, Group, Additional>,\n) => void;\n\nexport const requestOptions = async <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  caller: RequestOptionsCallerType,\n  paramsRef: MutableRefObject<UseAsyncPaginateBaseParams<OptionType, Group, Additional>>,\n  optionsCacheRef: MutableRefObject<OptionsCache<OptionType, Group, Additional>>,\n  debounceTimeout: number,\n  setOptionsCache: SetOptionsCache<OptionType, Group, Additional>,\n  reduceOptions: ReduceOptions<OptionType, Group, Additional>,\n): Promise<void> => {\n  const currentInputValue = paramsRef.current.inputValue;\n\n  const isCacheEmpty = !optionsCacheRef.current[currentInputValue];\n\n  const currentOptions: OptionsCacheItem<OptionType, Group, Additional> = isCacheEmpty\n    ? getInitialCache(paramsRef.current)\n    : optionsCacheRef.current[currentInputValue];\n\n  if (currentOptions.isLoading || !currentOptions.hasMore) {\n    return;\n  }\n\n  setOptionsCache((\n    prevOptionsCache: OptionsCache<OptionType, Group, Additional>,\n  ): OptionsCache<OptionType, Group, Additional> => ({\n    ...prevOptionsCache,\n    [currentInputValue]: {\n      ...currentOptions,\n      isLoading: true,\n    },\n  }));\n\n  if (debounceTimeout > 0 && caller === 'input-change') {\n    await sleep(debounceTimeout);\n\n    const newInputValue = paramsRef.current.inputValue;\n\n    if (currentInputValue !== newInputValue) {\n      setOptionsCache((prevOptionsCache) => {\n        if (isCacheEmpty) {\n          const {\n            [currentInputValue]: itemForDelete,\n            ...restCache\n          } = prevOptionsCache;\n\n          return restCache;\n        }\n\n        return {\n          ...prevOptionsCache,\n          [currentInputValue]: {\n            ...currentOptions,\n            isLoading: false,\n          },\n        };\n      });\n\n      return;\n    }\n  }\n\n  let response;\n  let hasError = false;\n\n  try {\n    const {\n      loadOptions,\n    } = paramsRef.current;\n\n    response = await loadOptions(\n      currentInputValue,\n      currentOptions.options,\n      currentOptions.additional,\n    );\n  } catch (e) {\n    hasError = true;\n  }\n\n  if (hasError) {\n    setOptionsCache((prevOptionsCache) => ({\n      ...prevOptionsCache,\n      [currentInputValue]: {\n        ...currentOptions,\n        isLoading: false,\n      },\n    }));\n\n    return;\n  }\n\n  if (validateResponse(response)) {\n    const {\n      options,\n      hasMore,\n    } = response;\n\n    // eslint-disable-next-line no-prototype-builtins\n    const newAdditional = response.hasOwnProperty('additional')\n      ? response.additional\n      : currentOptions.additional;\n\n    setOptionsCache((prevOptionsCache) => ({\n      ...prevOptionsCache,\n      [currentInputValue]: {\n        ...currentOptions,\n        options: reduceOptions(currentOptions.options, options, newAdditional),\n        hasMore: !!hasMore,\n        isLoading: false,\n        isFirstLoad: false,\n        additional: newAdditional,\n      },\n    }));\n  }\n};\n","import type {\n  GroupBase,\n} from 'react-select';\n\nimport type {\n  Response,\n} from './types';\n\nexport const errorText = '[react-select-async-paginate] response of \"loadOptions\" should be an object with \"options\" prop, which contains array of options.';\n\nexport const checkIsResponse = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  response: unknown,\n): response is Response<OptionType, Group, Additional> => {\n  if (!response) {\n    return false;\n  }\n\n  const {\n    options,\n    hasMore,\n  } = response as {\n    options?: unknown;\n    hasMore?: unknown;\n  };\n\n  if (!Array.isArray(options)) {\n    return false;\n  }\n\n  if (typeof hasMore !== 'boolean' && typeof hasMore !== 'undefined') {\n    return false;\n  }\n\n  return true;\n};\n\nexport const validateResponse = <OptionType, Group extends GroupBase<OptionType>, Additional>(\n  response: unknown,\n): response is Response<OptionType, Group, Additional> => {\n  if (!checkIsResponse(response)) {\n    // eslint-disable-next-line no-console\n    console.error(errorText, 'Received:', response);\n    throw new Error(errorText);\n  }\n\n  return true;\n};\n","import {\n  useMemo,\n} from 'react';\nimport type {\n  GroupBase,\n  Props as SelectProps,\n} from 'react-select';\n\nimport { components as defaultComponents } from 'react-select';\n\nimport { wrapMenuList } from './wrapMenuList';\n\nexport const MenuList = wrapMenuList(defaultComponents.MenuList);\n\nexport type SelectComponentsConfig<\nOptionType,\nIsMulti extends boolean,\nGroup extends GroupBase<OptionType>,\n> = Partial<SelectProps<OptionType, IsMulti, Group>['components']>;\n\nexport const useComponents = <\nOptionType,\nGroup extends GroupBase<OptionType>,\nIsMulti extends boolean,\n>(\n    components: SelectComponentsConfig<OptionType, IsMulti, Group>,\n  ): SelectComponentsConfig<OptionType, IsMulti, Group> => useMemo(() => ({\n    MenuList,\n    ...components,\n  }), [components]);\n","import {\n  useEffect,\n  useRef,\n  useCallback,\n} from 'react';\nimport type {\n  ReactElement,\n} from 'react';\n\nimport type {\n  GroupBase,\n  MenuListProps,\n} from 'react-select';\n\nimport composeRefs from '@seznam/compose-react-refs';\n\nimport type {\n  ShouldLoadMore,\n} from './types';\n\nexport const CHECK_TIMEOUT = 300;\n\nexport type BaseSelectProps = {\n  handleScrolledToBottom?: () => void;\n  shouldLoadMore: ShouldLoadMore;\n};\n\ntype MenuListType <\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n> = (props: MenuListProps<Option, IsMulti, Group>) => ReactElement;\n\nexport function wrapMenuList<\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n>(\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  MenuList: MenuListType<Option, IsMulti, Group>,\n) {\n  function WrappedMenuList(props: MenuListProps<Option, IsMulti, Group>) {\n    const {\n      selectProps,\n      innerRef,\n    } = props;\n\n    const {\n      handleScrolledToBottom,\n      shouldLoadMore,\n    } = selectProps as unknown as BaseSelectProps;\n\n    const checkTimeoutRef = useRef<NodeJS.Timeout>();\n    const menuListRef = useRef<HTMLElement>(null);\n\n    const shouldHandle = useCallback(() => {\n      const el = menuListRef.current;\n\n      // menu is not rendered\n      if (!el) {\n        return false;\n      }\n\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n      } = el;\n\n      return shouldLoadMore(scrollHeight, clientHeight, scrollTop);\n    }, [shouldLoadMore]);\n\n    const checkAndHandle = useCallback(() => {\n      if (shouldHandle()) {\n        if (handleScrolledToBottom) {\n          handleScrolledToBottom();\n        }\n      }\n    }, [shouldHandle, handleScrolledToBottom]);\n\n    const setCheckAndHandleTimeout = useCallback(() => {\n      checkAndHandle();\n\n      checkTimeoutRef.current = setTimeout(setCheckAndHandleTimeout, CHECK_TIMEOUT);\n    }, [checkAndHandle]);\n\n    useEffect(() => {\n      setCheckAndHandleTimeout();\n\n      return (): void => {\n        if (checkTimeoutRef.current) {\n          clearTimeout(checkTimeoutRef.current);\n        }\n      };\n    }, []);\n\n    return (\n      <MenuList\n        {...props}\n        innerRef={composeRefs<HTMLElement>(innerRef, menuListRef)}\n      />\n    );\n  }\n\n  return WrappedMenuList;\n}\n","import type {\n  Ref,\n  ReactElement,\n} from 'react';\nimport type {\n  GroupBase,\n  Props as SelectProps,\n  SelectInstance,\n} from 'react-select';\n\nimport {\n  useAsyncPaginate,\n} from './useAsyncPaginate';\nimport {\n  useComponents,\n} from './useComponents';\n\nimport type {\n  UseAsyncPaginateResult,\n  AsyncPaginateProps,\n  WithAsyncPaginateType,\n} from './types';\n\nconst defaultCacheUniqs: unknown[] = [];\nconst defaultComponents = {};\n\ntype SelectComponentType = <\nOption = unknown,\nIsMulti extends boolean = boolean,\nGroup extends GroupBase<Option> = GroupBase<Option>,\n>(props: SelectProps<Option, IsMulti, Group> & {\n  ref?: Ref<SelectInstance<Option, IsMulti, Group>>;\n}) => ReactElement;\n\nexport function withAsyncPaginate(\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  SelectComponent: SelectComponentType,\n): WithAsyncPaginateType {\n  function WithAsyncPaginate<\n  OptionType,\n  Group extends GroupBase<OptionType>,\n  Additional,\n  IsMulti extends boolean = false,\n  >(props: AsyncPaginateProps<OptionType, Group, Additional, IsMulti>): ReactElement {\n    const {\n      components = defaultComponents,\n      selectRef = undefined,\n      isLoading: isLoadingProp,\n      cacheUniqs = defaultCacheUniqs,\n      ...rest\n    } = props;\n\n    const asyncPaginateProps: UseAsyncPaginateResult<OptionType, Group> = useAsyncPaginate(\n      rest,\n      cacheUniqs,\n    );\n\n    const processedComponents = useComponents<OptionType, Group, IsMulti>(components);\n\n    const isLoading = typeof isLoadingProp === 'boolean'\n      ? isLoadingProp\n      : asyncPaginateProps.isLoading;\n\n    return (\n      <SelectComponent\n        {...props}\n        {...asyncPaginateProps}\n        isLoading={isLoading}\n        components={processedComponents}\n        ref={selectRef}\n      />\n    );\n  }\n\n  return WithAsyncPaginate;\n}\n","import type {\n  GroupBase,\n  OptionsOrGroups,\n} from 'react-select';\n\nexport const checkGroup = (group: unknown): group is GroupBase<unknown> => {\n  if (!group) {\n    return false;\n  }\n\n  const {\n    label,\n    options,\n  } = group as {\n    label?: unknown;\n    options?: unknown;\n  };\n\n  if (typeof label !== 'string' && typeof label !== 'undefined') {\n    return false;\n  }\n\n  if (!Array.isArray(options)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const reduceGroupedOptions = <\nOptionType,\nGroup extends GroupBase<OptionType>,\n>(\n    prevOptions: OptionsOrGroups<OptionType, Group>,\n    loadedOptions: OptionsOrGroups<OptionType, Group>,\n  ): OptionsOrGroups<OptionType, Group> => {\n  const res = prevOptions.slice();\n\n  const mapLabelToIndex: Record<string, number> = {};\n  let prevOptionsIndex = 0;\n  const prevOptionsLength = prevOptions.length;\n\n  loadedOptions.forEach((optionOrGroup) => {\n    const group = checkGroup(optionOrGroup)\n      ? optionOrGroup\n      : {\n        options: [optionOrGroup],\n      } as unknown as Group;\n\n    const {\n      label = '',\n    } = group;\n\n    let groupIndex = mapLabelToIndex[label];\n    if (typeof groupIndex !== 'number') {\n      for (;\n        prevOptionsIndex < prevOptionsLength && typeof mapLabelToIndex[label] !== 'number';\n        ++prevOptionsIndex\n      ) {\n        const prevGroup = prevOptions[prevOptionsIndex];\n\n        if (checkGroup(prevGroup)) {\n          mapLabelToIndex[prevGroup.label || ''] = prevOptionsIndex;\n        }\n      }\n\n      groupIndex = mapLabelToIndex[label];\n    }\n\n    if (typeof groupIndex !== 'number') {\n      mapLabelToIndex[label] = res.length;\n      res.push(group);\n      return;\n    }\n\n    res[groupIndex] = {\n      ...res[groupIndex],\n      options: [...(res[groupIndex] as Group).options, ...group.options],\n    };\n  });\n\n  return res;\n};\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAA,MAAY;;;ACAnB,SACEC,QAAA,IAAAC,SAAA,EACAC,WAAA,IAAAC,YAAA,QACK;;;ACHP,SACEH,QAAA,EACAI,SAAA,EACAC,MAAA,EACAH,WAAA,QACK;AAMP,OAAOI,eAAA,MAAqB;AAE5B,SAASC,UAAA,QAAkB;;;ACJpB,IAAMC,eAAA,GAAkB,SAAlBA,gBACXC,MAAA;EAAA,OACqD;IACnDC,WAAA,EAAa;IACbC,OAAA,EAAS,EAAC;IACVC,OAAA,EAAS;IACTC,SAAA,EAAW;IACXC,UAAA,EAAYL,MAAA,CAAOK;EACrB;AAAA;;;ACRK,IAAMC,sBAAA,GAAyB,SAAzBA,uBAAAC,IAAA,EAUuC;EAAA,IAL9CL,OAAA,GAAAK,IAAA,CAAAL,OAAA;IACAM,cAAA,GAAAD,IAAA,CAAAC,cAAA;IACAH,UAAA,GAAAE,IAAA,CAAAF,UAAA;IACAI,iBAAA,GAAAF,IAAA,CAAAE,iBAAA;EAGJ,IAAMC,cAAA,GAAiBF,cAAA,KAAmB,OACtC,OACCA,cAAA,YAA0BG,KAAA,GACzBH,cAAA,GACAN,OAAA;EAEN,IAAIQ,cAAA,EAAgB;IAClB,OAAO;MACL,IAAI;QACFT,WAAA,EAAa;QACbG,SAAA,EAAW;QACXF,OAAA,EAASQ,cAAA;QACTP,OAAA,EAAS;QACTE,UAAA,EAAYI,iBAAA,IAAqBJ;MACnC;IACF;EACF;EAEA,OAAO,CAAC;AACV;;;ACnCA,IAAMO,eAAA,GAAkB;AAEjB,IAAMC,qBAAA,GAAwC,SAAxCA,sBAAyCC,YAAA,EAAcC,YAAA,EAAcC,SAAA,EAAc;EAC9F,IAAMC,YAAA,GAAeH,YAAA,GAAeC,YAAA,GAAeH,eAAA;EAEnD,OAAOK,YAAA,GAAeD,SAAA;AACxB;;;ACLO,IAAME,oBAAA,GAAuB,SAAvBA,qBACXC,WAAA,EACAC,aAAA;EAAA,UAAAC,MAAA,CAAAC,kBAAA,CACOH,WAAA,GAAAG,kBAAA,CAAgBF,aAAa;AAAA;;;ACDtC,OAAOG,KAAA,MAAW;;;ACCX,IAAMC,SAAA,GAAY;AAElB,IAAMC,eAAA,GAAkB,SAAlBA,gBACXC,QAAA,EACwD;EACxD,IAAI,CAACA,QAAA,EAAU;IACb,OAAO;EACT;EAEA,IACExB,OAAA,GAEEwB,QAAA,CAFFxB,OAAA;IACAC,OAAA,GACEuB,QAAA,CADFvB,OAAA;EAMF,IAAI,CAACQ,KAAA,CAAMgB,OAAA,CAAQzB,OAAO,GAAG;IAC3B,OAAO;EACT;EAEA,IAAI,OAAOC,OAAA,KAAY,aAAa,OAAOA,OAAA,KAAY,aAAa;IAClE,OAAO;EACT;EAEA,OAAO;AACT;AAEO,IAAMyB,gBAAA,GAAmB,SAAnBA,iBACXF,QAAA,EACwD;EACxD,IAAI,CAACD,eAAA,CAAgBC,QAAQ,GAAG;IAE9BG,OAAA,CAAQC,KAAA,CAAMN,SAAA,EAAW,aAAaE,QAAQ;IAC9C,MAAM,IAAIK,KAAA,CAAMP,SAAS;EAC3B;EAEA,OAAO;AACT;;;ADlBO,IAAMQ,cAAA;EAAA,IAAAC,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAiB,SAAAC,QAC5BC,MAAA,EACAC,SAAA,EACAC,eAAA,EACAC,eAAA,EACAC,eAAA,EACAC,aAAA;IAAA,IAAAC,iBAAA,EAAAC,YAAA,EAAAC,cAAA,EAAAC,aAAA,EAAArB,QAAA,EAAAsB,QAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAhD,OAAA,EAAAC,OAAA,EAAAgD,aAAA;IAAA,OAAAhB,mBAAA,GAAAiB,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAEMZ,iBAAA,GAAoBL,SAAA,CAAUkB,OAAA,CAAQC,UAAA;UAEtCb,YAAA,GAAe,CAACL,eAAA,CAAgBiB,OAAA,CAAQb,iBAAA;UAExCE,cAAA,GAAkED,YAAA,GACpE9C,eAAA,CAAgBwC,SAAA,CAAUkB,OAAO,IACjCjB,eAAA,CAAgBiB,OAAA,CAAQb,iBAAA;UAAA,MAExBE,cAAA,CAAe1C,SAAA,IAAa,CAAC0C,cAAA,CAAe3C,OAAA;YAAAmD,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAK,MAAA;QAAA;UAIhDjB,eAAA,CAAgB,UACdkB,gBAAA;YAAA,OAAAC,aAAA,CAAAA,aAAA,KAEGD,gBAAA,OAAAE,eAAA,KACFlB,iBAAA,EAAAiB,aAAA,CAAAA,aAAA,KACIf,cAAA;cACH1C,SAAA,EAAW;YAAA;UAAA,CAEb;UAAA,MAEEqC,eAAA,GAAkB,KAAKH,MAAA,KAAW;YAAAgB,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAC9BjC,KAAA,CAAMkB,eAAe;QAAA;UAErBM,aAAA,GAAgBR,SAAA,CAAUkB,OAAA,CAAQC,UAAA;UAAA,MAEpCd,iBAAA,KAAsBG,aAAA;YAAAO,QAAA,CAAAE,IAAA;YAAA;UAAA;UACxBd,eAAA,CAAgB,UAACkB,gBAAA,EAAqB;YACpC,IAAIf,YAAA,EAAc;cAChB,IACuBkB,aAAA,GAEnBH,gBAAA,CAFDhB,iBAAA;gBACEoB,SAAA,GAAAC,wBAAA,CACDL,gBAAA,GAFDhB,iBAAA,EAAAsB,GAAA,CAAAC,cAAA;cAIH,OAAOH,SAAA;YACT;YAEA,OAAAH,aAAA,CAAAA,aAAA,KACKD,gBAAA,OAAAE,eAAA,KACFlB,iBAAA,EAAAiB,aAAA,CAAAA,aAAA,KACIf,cAAA;cACH1C,SAAA,EAAW;YAAA;UAGjB,CAAC;UAAA,OAAAkD,QAAA,CAAAK,MAAA;QAAA;UAODX,QAAA,GAAW;UAAAM,QAAA,CAAAC,IAAA;UAIXN,WAAA,GACEV,SAAA,CAAUkB,OAAA,CADZR,WAAA;UAAAK,QAAA,CAAAE,IAAA;UAAA,OAGeP,WAAA,CACfL,iBAAA,EACAE,cAAA,CAAe5C,OAAA,EACf4C,cAAA,CAAezC,UACjB;QAAA;UAJAqB,QAAA,GAAA4B,QAAA,CAAAc,IAAA;UAAAd,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAe,EAAA,GAAAf,QAAA;UAMAN,QAAA,GAAW;QAAA;UAAA,KAGTA,QAAA;YAAAM,QAAA,CAAAE,IAAA;YAAA;UAAA;UACFd,eAAA,CAAgB,UAACkB,gBAAA;YAAA,OAAAC,aAAA,CAAAA,aAAA,KACZD,gBAAA,OAAAE,eAAA,KACFlB,iBAAA,EAAAiB,aAAA,CAAAA,aAAA,KACIf,cAAA;cACH1C,SAAA,EAAW;YAAA;UAAA,CAEb;UAAA,OAAAkD,QAAA,CAAAK,MAAA;QAAA;UAKJ,IAAI/B,gBAAA,CAAiBF,QAAQ,GAAG;YAAAwB,SAAA,GAI1BxB,QAAA,EAFFxB,OAAA,GAAAgD,SAAA,CAAAhD,OAAA,EACAC,OAAA,GAAA+C,SAAA,CAAA/C,OAAA;YAIIgD,aAAA,GAAgBzB,QAAA,CAAS4C,cAAA,CAAe,YAAY,IACtD5C,QAAA,CAASrB,UAAA,GACTyC,cAAA,CAAezC,UAAA;YAEnBqC,eAAA,CAAgB,UAACkB,gBAAA;cAAA,OAAAC,aAAA,CAAAA,aAAA,KACZD,gBAAA,OAAAE,eAAA,KACFlB,iBAAA,EAAAiB,aAAA,CAAAA,aAAA,KACIf,cAAA;gBACH5C,OAAA,EAASyC,aAAA,CAAcG,cAAA,CAAe5C,OAAA,EAASA,OAAA,EAASiD,aAAa;gBACrEhD,OAAA,EAAS,CAAC,CAACA,OAAA;gBACXC,SAAA,EAAW;gBACXH,WAAA,EAAa;gBACbI,UAAA,EAAY8C;cAAA;YAAA,CAEd;UACJ;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAiB,IAAA;MAAA;IAAA,GAAAlC,OAAA;EAAA,CACF;EAAA,gBA/GaL,eAAAwC,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA5C,KAAA,CAAA6C,KAAA,OAAAC,SAAA;EAAA;AAAA,GA+Gb;;;AL/GO,IAAMC,eAAA,GAAkB,SAAlBA,gBAAmBC,WAAA;EAAA,OAAgCA,WAAA,GAAc;AAAA;AAEvE,IAAMC,oBAAA,GAAuB,SAAvBA,qBAKTlF,MAAA,EAEkD;EAAA,IADlDmF,IAAA,GAAAJ,SAAA,CAAAK,MAAA,QAAAL,SAAA,QAAAM,SAAA,GAAAN,SAAA,MAA2B,EAAC;EAE9B,IACEvE,cAAA,GAQER,MAAA,CARFQ,cAAA;IAAA8E,qBAAA,GAQEtF,MAAA,CAPFuF,qBAAA;IAAAA,qBAAA,GAAAD,qBAAA,cAAwB,OAAAA,qBAAA;IAAAE,qBAAA,GAOtBxF,MAAA,CANFyC,eAAA;IAAAA,eAAA,GAAA+C,qBAAA,cAAkB,IAAAA,qBAAA;IAClB9B,UAAA,GAKE1D,MAAA,CALF0D,UAAA;IACA+B,UAAA,GAIEzF,MAAA,CAJFyF,UAAA;IAAAC,oBAAA,GAIE1F,MAAA,CAHF2F,YAAA;IAAAA,YAAA,GAAAD,oBAAA,cAAe,OAAAA,oBAAA;IAAAE,qBAAA,GAGb5F,MAAA,CAFF2C,aAAA;IAAAA,aAAA,GAAAiD,qBAAA,cAAgB1E,oBAAA,GAAA0E,qBAAA;IAAAC,qBAAA,GAEd7F,MAAA,CADF8F,cAAA;IAAAA,cAAA,GAAAD,qBAAA,cAAiBhF,qBAAA,GAAAgF,qBAAA;EAGnB,IAAME,YAAA,GAAelG,eAAA,CAAgB;EAErC,IAAMmG,SAAA,GAAYpG,MAAA,CAAgB,IAAI;EACtC,IAAM2C,SAAA,GAAY3C,MAAA,CAAkEI,MAAM;EAE1FuC,SAAA,CAAUkB,OAAA,GAAUzD,MAAA;EAEpB,IAAMiG,UAAA,GAAa1G,QAAA,CAAS,CAAC,EAAE;EAE/B,IAAMiD,eAAA,GAAkB1C,UAAA,CAAW;IAAA,OAAMQ,sBAAA,CAAuBN,MAAM,CAAC;EAAA;EAEvE,IAAMkG,kBAAA,GAAqBzG,WAAA,CAAY,UAAC6C,MAAA,EAA2C;IACjFN,cAAA,CACEM,MAAA,EACAC,SAAA,EACAC,eAAA,EACAC,eAAA,EACA,UAAC0D,WAAA,EAAgB;MACf3D,eAAA,CAAgBiB,OAAA,GAAU0C,WAAA,CAAY3D,eAAA,CAAgBiB,OAAO;MAE7D,IAAIsC,YAAA,CAAatC,OAAA,EAAS;QACxBwC,UAAA,CAAWjB,eAAe;MAC5B;IACF,GACArC,aACF;EACF,GAAG,CAACF,eAAe,CAAC;EAEpB,IAAM2D,sBAAA,GAAyB3G,WAAA,CAAY,YAAY;IACrD,IAAMmD,iBAAA,GAAoBL,SAAA,CAAUkB,OAAA,CAAQC,UAAA;IAC5C,IAAM2C,eAAA,GAAiB7D,eAAA,CAAgBiB,OAAA,CAAQb,iBAAA;IAE/C,IAAIyD,eAAA,EAAgB;MAClBH,kBAAA,CAAmB,aAAa;IAClC;EACF,GAAG,CAACA,kBAAkB,CAAC;EAEvBvG,SAAA,CAAU,YAAM;IACd,IAAIqG,SAAA,CAAUvC,OAAA,EAAS;MACrBuC,SAAA,CAAUvC,OAAA,GAAU;IACtB,OAAO;MACLjB,eAAA,CAAgBiB,OAAA,GAAU,CAAC;MAC3BwC,UAAA,CAAWjB,eAAe;IAC5B;IAEA,IAAIxE,cAAA,KAAmB,MAAM;MAC3B0F,kBAAA,CAAmB,UAAU;IAC/B;EACF,GAAGf,IAAI;EAEPxF,SAAA,CAAU,YAAM;IACd,IAAI8F,UAAA,IAAc,CAACjD,eAAA,CAAgBiB,OAAA,CAAQC,UAAA,GAAa;MACtDwC,kBAAA,CAAmB,cAAc;IACnC;EACF,GAAG,CAACxC,UAAU,CAAC;EAEf/D,SAAA,CAAU,YAAM;IACd,IACE8F,UAAA,IACG,CAACjD,eAAA,CAAgBiB,OAAA,CAAQ,OACzB8B,qBAAA,EACH;MACAW,kBAAA,CAAmB,aAAa;IAClC;EACF,GAAG,CAACT,UAAU,CAAC;EAEf,IAAM3C,cAAA,GAIFN,eAAA,CAAgBiB,OAAA,CAAQC,UAAA,KACvB3D,eAAA,CAAgBC,MAAM;EAE3B,OAAO;IACLoG,sBAAA,EAAAA,sBAAA;IACAN,cAAA,EAAAA,cAAA;IACAH,YAAA,EAAAA,YAAA;IACAvF,SAAA,EAAW0C,cAAA,CAAe1C,SAAA;IAC1BH,WAAA,EAAa6C,cAAA,CAAe7C,WAAA;IAC5BC,OAAA,EAAS4C,cAAA,CAAe5C;EAC1B;AACF;;;AD/GO,IAAMoG,gBAAA,GAAmB,SAAnBA,iBACXtG,MAAA,EAE8C;EAAA,IAD9CmF,IAAA,GAAAJ,SAAA,CAAAK,MAAA,QAAAL,SAAA,QAAAM,SAAA,GAAAN,SAAA,MAA+B,EAAC;EAEhC,IACcwB,eAAA,GAOVvG,MAAA,CAPF0D,UAAA;IACY8C,eAAA,GAMVxG,MAAA,CANFyF,UAAA;IACmBgB,sBAAA,GAKjBzG,MAAA,CALF0G,iBAAA;IACmBC,sBAAA,GAIjB3G,MAAA,CAJF4G,iBAAA;IACeC,kBAAA,GAGb7G,MAAA,CAHF8G,aAAA;IACaC,gBAAA,GAEX/G,MAAA,CAFFgH,WAAA;IACYC,eAAA,GACVjH,MAAA,CADFkH,UAAA;EAGF,IAAAC,SAAA,GAAyC3H,SAAA,CACvCiH,sBAAA,IAA0B,EAC5B;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAFOG,eAAA,GAAAF,UAAA;IAAiBG,aAAa,GAAAH,UAAA;EAGrC,IAAAI,UAAA,GAAyChI,SAAA,CACvC,CAAC,CAACmH,sBACJ;IAAAc,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAFOE,eAAA,GAAAD,UAAA;IAAiBE,aAAa,GAAAF,UAAA;EAIrC,IAAM/D,UAAA,GAAqB,OAAO6C,eAAA,KAAoB,WAClDA,eAAA,GACAe,eAAA;EAEJ,IAAM7B,UAAA,GAAsB,OAAOe,eAAA,KAAoB,YACnDA,eAAA,GACAkB,eAAA;EAEJ,IAAMZ,aAAA,GAAgBpH,YAAA,CAAY,UAChCkI,cAAA,EACAC,UAAA,EACS;IACT,IAAIhB,kBAAA,EAAoB;MACtBA,kBAAA,CAAmBe,cAAA,EAAgBC,UAAU;IAC/C;IAEAN,aAAA,CAAcK,cAAc;EAC9B,GAAG,CAACf,kBAAkB,CAAC;EAEvB,IAAMG,WAAA,GAActH,YAAA,CAAY,YAAY;IAC1C,IAAIqH,gBAAA,EAAkB;MACpBA,gBAAA,CAAiB;IACnB;IAEAY,aAAA,CAAc,KAAK;EACrB,GAAG,CAACZ,gBAAgB,CAAC;EAErB,IAAMG,UAAA,GAAaxH,YAAA,CAAY,YAAY;IACzC,IAAIuH,eAAA,EAAiB;MACnBA,eAAA,CAAgB;IAClB;IAEAU,aAAA,CAAc,IAAI;EACpB,GAAG,CAACV,eAAe,CAAC;EAEpB,IAAMa,UAAA,GAA4D5C,oBAAA,CAAArB,aAAA,CAAAA,aAAA,KAE3D7D,MAAA;IACH0D,UAAA,EAAAA,UAAA;IACA+B,UAAA,EAAAA;EAAA,IAEFN,IACF;EAEA,OAAAtB,aAAA,CAAAA,aAAA,KACKiE,UAAA;IACHpE,UAAA,EAAAA,UAAA;IACA+B,UAAA,EAAAA,UAAA;IACAqB,aAAA,EAAAA,aAAA;IACAE,WAAA,EAAAA,WAAA;IACAE,UAAA,EAAAA;EAAA;AAEJ;;;AQ5FA,SACEa,OAAA,QACK;AAMP,SAASC,UAAA,IAAcC,iBAAA,QAAyB;;;ACRhD,SACEtI,SAAA,IAAAuI,UAAA,EACAtI,MAAA,IAAAuI,OAAA,EACA1I,WAAA,IAAA2I,YAAA,QACK;AAUP,OAAOC,WAAA,MAAiB;AAmFlB,SAAAC,GAAA;AA7EC,IAAMC,aAAA,GAAgB;AAatB,SAASC,aAMdC,SAAA,EACA;EACA,SAASC,gBAAgBC,KAAA,EAA8C;IACrE,IACEC,WAAA,GAEED,KAAA,CAFFC,WAAA;MACAC,QAAA,GACEF,KAAA,CADFE,QAAA;IAGF,IACEzC,sBAAA,GAEEwC,WAAA,CAFFxC,sBAAA;MACAN,cAAA,GACE8C,WAAA,CADF9C,cAAA;IAGF,IAAMgD,eAAA,GAAkBX,OAAA,CAAuB;IAC/C,IAAMY,WAAA,GAAcZ,OAAA,CAAoB,IAAI;IAE5C,IAAMa,YAAA,GAAeZ,YAAA,CAAY,YAAM;MACrC,IAAMa,EAAA,GAAKF,WAAA,CAAYtF,OAAA;MAGvB,IAAI,CAACwF,EAAA,EAAI;QACP,OAAO;MACT;MAEA,IACEjI,SAAA,GAGEiI,EAAA,CAHFjI,SAAA;QACAF,YAAA,GAEEmI,EAAA,CAFFnI,YAAA;QACAC,YAAA,GACEkI,EAAA,CADFlI,YAAA;MAGF,OAAO+E,cAAA,CAAehF,YAAA,EAAcC,YAAA,EAAcC,SAAS;IAC7D,GAAG,CAAC8E,cAAc,CAAC;IAEnB,IAAMoD,cAAA,GAAiBd,YAAA,CAAY,YAAM;MACvC,IAAIY,YAAA,CAAa,GAAG;QAClB,IAAI5C,sBAAA,EAAwB;UAC1BA,sBAAA,CAAuB;QACzB;MACF;IACF,GAAG,CAAC4C,YAAA,EAAc5C,sBAAsB,CAAC;IAEzC,IAAM+C,wBAAA,GAA2Bf,YAAA,CAAY,YAAM;MACjDc,cAAA,CAAe;MAEfJ,eAAA,CAAgBrF,OAAA,GAAU2F,UAAA,CAAWD,wBAAA,EAA0BZ,aAAa;IAC9E,GAAG,CAACW,cAAc,CAAC;IAEnBhB,UAAA,CAAU,YAAM;MACdiB,wBAAA,CAAyB;MAEzB,OAAO,YAAY;QACjB,IAAIL,eAAA,CAAgBrF,OAAA,EAAS;UAC3B4F,YAAA,CAAaP,eAAA,CAAgBrF,OAAO;QACtC;MACF;IACF,GAAG,EAAE;IAEL,OACE,eAAA6E,GAAA,CAACG,SAAA,EAAA5E,aAAA,CAAAA,aAAA,KACK8E,KAAA;MACJE,QAAA,EAAUR,WAAA,CAAyBQ,QAAA,EAAUE,WAAW;IAAA,EAC1D;EAEJ;EAEA,OAAOL,eAAA;AACT;;;AD7FO,IAAMY,QAAA,GAAWd,YAAA,CAAaP,iBAAA,CAAkBqB,QAAQ;AAQxD,IAAMC,aAAA,GAAgB,SAAhBA,cAKTvB,UAAA;EAAA,OACuDD,OAAA,CAAQ;IAAA,OAAAlE,aAAA;MAC/DyF,QAAA,EAAAA;IAAA,GACGtB,UAAA;EAAA,CACL,EAAI,CAACA,UAAU,CAAC;AAAA;;;AEmCZ,SAAAM,GAAA,IAAAkB,IAAA;AAzCN,IAAMC,iBAAA,GAA+B,EAAC;AACtC,IAAMC,kBAAA,GAAoB,CAAC;AAUpB,SAASC,kBAEdC,eAAA,EACuB;EACvB,SAASC,kBAKPlB,KAAA,EAAiF;IACjF,IAAAmB,iBAAA,GAMInB,KAAA,CALFX,UAAA;MAAAA,UAAA,GAAA8B,iBAAA,cAAaJ,kBAAA,GAAAI,iBAAA;MAAAC,gBAAA,GAKXpB,KAAA,CAJFqB,SAAA;MAAAA,SAAA,GAAAD,gBAAA,cAAY,SAAAA,gBAAA;MACDE,aAAA,GAGTtB,KAAA,CAHFvI,SAAA;MAAA8J,iBAAA,GAGEvB,KAAA,CAFFwB,UAAA;MAAAA,UAAA,GAAAD,iBAAA,cAAaT,iBAAA,GAAAS,iBAAA;MACVE,IAAA,GAAAnG,wBAAA,CACD0E,KAAA,EAAA0B,SAAA;IAEJ,IAAMC,kBAAA,GAAgEhE,gBAAA,CACpE8D,IAAA,EACAD,UACF;IAEA,IAAMI,mBAAA,GAAsBhB,aAAA,CAA0CvB,UAAU;IAEhF,IAAM5H,SAAA,GAAY,OAAO6J,aAAA,KAAkB,YACvCA,aAAA,GACAK,kBAAA,CAAmBlK,SAAA;IAEvB,OACE,eAAAoJ,IAAA,CAACI,eAAA,EAAA/F,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACK8E,KAAA,GACA2B,kBAAA;MACJlK,SAAA,EAAAA,SAAA;MACA4H,UAAA,EAAYuC,mBAAA;MACZC,GAAA,EAAKR;IAAA,EACP;EAEJ;EAEA,OAAOH,iBAAA;AACT;;;ACtEO,IAAMY,UAAA,GAAa,SAAbA,WAAcC,KAAA,EAAgD;EACzE,IAAI,CAACA,KAAA,EAAO;IACV,OAAO;EACT;EAEA,IACEC,KAAA,GAEED,KAAA,CAFFC,KAAA;IACAzK,OAAA,GACEwK,KAAA,CADFxK,OAAA;EAMF,IAAI,OAAOyK,KAAA,KAAU,YAAY,OAAOA,KAAA,KAAU,aAAa;IAC7D,OAAO;EACT;EAEA,IAAI,CAAChK,KAAA,CAAMgB,OAAA,CAAQzB,OAAO,GAAG;IAC3B,OAAO;EACT;EAEA,OAAO;AACT;AAEO,IAAM0K,oBAAA,GAAuB,SAAvBA,qBAITzJ,WAAA,EACAC,aAAA,EACuC;EACzC,IAAMyJ,GAAA,GAAM1J,WAAA,CAAY2J,KAAA,CAAM;EAE9B,IAAMC,eAAA,GAA0C,CAAC;EACjD,IAAIC,gBAAA,GAAmB;EACvB,IAAMC,iBAAA,GAAoB9J,WAAA,CAAYiE,MAAA;EAEtChE,aAAA,CAAc8J,OAAA,CAAQ,UAACC,aAAA,EAAkB;IACvC,IAAMT,KAAA,GAAQD,UAAA,CAAWU,aAAa,IAClCA,aAAA,GACA;MACAjL,OAAA,EAAS,CAACiL,aAAa;IACzB;IAEF,IAAAC,YAAA,GAEIV,KAAA,CADFC,KAAA;MAAAA,KAAA,GAAAS,YAAA,cAAQ,KAAAA,YAAA;IAGV,IAAIC,UAAA,GAAaN,eAAA,CAAgBJ,KAAA;IACjC,IAAI,OAAOU,UAAA,KAAe,UAAU;MAClC,OACEL,gBAAA,GAAmBC,iBAAA,IAAqB,OAAOF,eAAA,CAAgBJ,KAAA,MAAW,UAC1E,EAAEK,gBAAA,EACF;QACA,IAAMM,SAAA,GAAYnK,WAAA,CAAY6J,gBAAA;QAE9B,IAAIP,UAAA,CAAWa,SAAS,GAAG;UACzBP,eAAA,CAAgBO,SAAA,CAAUX,KAAA,IAAS,MAAMK,gBAAA;QAC3C;MACF;MAEAK,UAAA,GAAaN,eAAA,CAAgBJ,KAAA;IAC/B;IAEA,IAAI,OAAOU,UAAA,KAAe,UAAU;MAClCN,eAAA,CAAgBJ,KAAA,IAASE,GAAA,CAAIzF,MAAA;MAC7ByF,GAAA,CAAIU,IAAA,CAAKb,KAAK;MACd;IACF;IAEAG,GAAA,CAAIQ,UAAA,IAAAxH,aAAA,CAAAA,aAAA,KACCgH,GAAA,CAAIQ,UAAA;MACPnL,OAAA,KAAAmB,MAAA,CAAAC,kBAAA,CAAcuJ,GAAA,CAAIQ,UAAA,EAAsBnL,OAAA,GAAAoB,kBAAA,CAAYoJ,KAAA,CAAMxK,OAAO;IAAA,EACnE;EACF,CAAC;EAED,OAAO2K,GAAA;AACT;;;AZjEO,IAAMW,aAAA,GAAgB7B,iBAAA,CAAkBrK,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}