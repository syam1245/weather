{"ast":null,"code":"var _jsxFileName = \"/home/syampushpan/Downloads/WeatherForecast-main/Client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { WEATHER_API_KEY, WEATHER_API_URL } from \"./api\";\nimport CurrentWeather from \"./components/current-weather/current-weather.js\";\nimport Search from \"./components/search/Search\";\nimport Forecast from \"./components/forecast/forecast\";\nimport Header from \"./components/Navbar/Header\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeatherFetch] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forecastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setCurrentWeatherFetch({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  console.log(currentWeather);\n  console.log(forecast);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        onSearchChange: handleOnSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        data: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 28\n      }, this), forecast && /*#__PURE__*/_jsxDEV(Forecast, {\n        data: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"r1vNfk6aoEGbxv/0Z/GF4RR8OLo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","WEATHER_API_KEY","WEATHER_API_URL","CurrentWeather","Search","Forecast","Header","Route","Routes","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentWeather","setCurrentWeatherFetch","forecast","setForecast","handleOnSearchChange","searchData","lat","lon","value","split","currentWeatherFetch","fetch","forecastFetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","catch","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSearchChange","data","path","component","_c","$RefreshReg$"],"sources":["/home/syampushpan/Downloads/WeatherForecast-main/Client/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport { WEATHER_API_KEY, WEATHER_API_URL } from \"./api\";\nimport CurrentWeather from \"./components/current-weather/current-weather.js\";\nimport Search from \"./components/search/Search\";\nimport Forecast from \"./components/forecast/forecast\";\nimport Header from \"./components/Navbar/Header\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n  const [currentWeather, setCurrentWeatherFetch] = useState(null);\n  const [forecast, setForecast] = useState(null);\n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const currentWeatherFetch = fetch(\n      `${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    const forecastFetch = fetch(\n      `${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    Promise.all([currentWeatherFetch, forecastFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n\n        setCurrentWeatherFetch({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forecastResponse });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  console.log(currentWeather);\n  console.log(forecast);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Search onSearchChange={handleOnSearchChange} />\n        {currentWeather && <CurrentWeather data={currentWeather} />}\n        {forecast && <Forecast data={forecast} />}\n        <Routes>\n          <Route path=\"/login\" component={Login} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}